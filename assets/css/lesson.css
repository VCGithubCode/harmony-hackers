:root {
    --main: #d5aa77;
    --sub: #971e08;
    --text: #FAFAFA;
    --background: #bc3b18;
    --accent: #0000;
}


/* default styles */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: "Monterrat", sans-serif;
}



body {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  min-height: 100vh;
  background-image: url("../images/wallpaper_notes.jpg");
  background-size: cover; 
  background-position: center;
}

/* placeholder for the flashcard wrapper */
.card-wrapper {
  flex-direction: row;
  padding: 35px 40px;
  border-radius: 20px;
  background: var(--main);
  margin-bottom: 1rem;
  margin-left: 10px;
}

/* our keyboard body */

.wrapper {
  flex-direction: row;
  padding: 35px 40px;
  border-radius: 20px;
  background: var(--main);
}


/* center card image */

.wrapper header {
  display: flex;
  color: black;
  align-items: center;
  justify-content: space-between;
}


/* 
Header styling, volume keys styled cleanly and added styling for
the key checkbox
*/

header h2 {
  font-size: 1.4rem;
}
header .column {
  display: flex;
  align-items: center;
}

/* styling the span text */
header span {
  font-weight: 500;
  margin-right: 15px;
  font-size: 1.2rem;
}
header input {
  outline: none;
  border-radius: 30px;
}
.volume-slider input {
  accent-color: #fff;
}

/* styling the key checkbox */
.key-checkbox input {
  height: 30px;
  width: 60px;
  cursor: pointer;
  appearance: none;
  position: relative;
  background: #000000;
}

/* styling the input before we click */
.key-checkbox input::before {
  content: "";
  position: absolute;
  /* positioning input */
  top: 50%;
  left: 5px;
  width: 20px;
  height: 20px;
  border-radius: 50%;
  /* coloring and resizing */
  background: var(--accent);
  transform: translateY(-50%);
  transition: all 0.3s ease;
}

/* additional styling for input before it gets checked */
.key-checkbox input:checked::before {
  left: 35px;
  background: #fff;
}

/* 
piano keys styling, we style the keys to be the same shape as piano
keys, we also automatically uppercase all the keys and add shading to
the bottom to make the keys look 3d. Later will add shading to make the
keys look pressed / changing the color when a key is highlighted during
a lesson
*/

.piano-keys {
  display: flex;
  list-style: none;
  margin-top: 40px;
}
.piano-keys .key {
  cursor: pointer;
  user-select: none;
  position: relative;
  text-transform: uppercase;
}
.piano-keys .black {
  z-index: 2;
  width: 44px;
  height: 160px;
  margin: 0 -22px 0 -22px;
  border-radius: 0 0 5px 5px;
  background: linear-gradient(#333, #000);
}
.piano-keys .black.active {
  box-shadow: inset -5px -10px 10px rgba(24, 24, 24, 0.1);
  background: linear-gradient(to bottom, #000, #434343);
}
.piano-keys .white {
  height: 250px;
  width: 75px;
  border-radius: 8px;
  border: 1px solid #000;
  background: linear-gradient(#fff 96%, #eee 4%);
}
.piano-keys .white.active {
  box-shadow: inset -5px 5px 20px rgba(0, 0, 0, 0.2);
  background: linear-gradient(to bottom, #fff 0%, #eee 100%);
}
.piano-keys .key span {
  position: absolute;
  bottom: 20px;
  width: 100%;
  color: #a2a2a2;
  font-size: 1.13rem;
  text-align: center;
}
.piano-keys .key.hide span {
  display: none;
}
.piano-keys .black span {
  bottom: 13px;
  color: #888888;
}

/* Correct and incorrect feedback classes */
.correct {
  background: unset !important;
  background-color: green !important;
  color: white !important;
}

.incorrect {
  background: unset !important;
  background-color: red !important;
  color: white !important;
}

/* Ensure that .correct and .incorrect take precedence over .active */
.key.correct.active,
.key.incorrect.active {
  background: unset !important;
  background-color: green !important; /* for correct keys */
  color: white !important;
}

.key.incorrect.active {
  background: unset !important;
  background-color: red !important; /* for incorrect keys */
  color: white !important;
}
